// Code generated by capnpc-go. DO NOT EDIT.

package logformat

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type RequestLog struct{ capnp.Struct }

// RequestLog_TypeID is the unique identifier for the type RequestLog.
const RequestLog_TypeID = 0xaa7385cfa9d5d29a

func NewRequestLog(s *capnp.Segment) (RequestLog, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 6})
	return RequestLog{st}, err
}

func NewRootRequestLog(s *capnp.Segment) (RequestLog, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 6})
	return RequestLog{st}, err
}

func ReadRootRequestLog(msg *capnp.Message) (RequestLog, error) {
	root, err := msg.RootPtr()
	return RequestLog{root.Struct()}, err
}

func (s RequestLog) String() string {
	str, _ := text.Marshal(0xaa7385cfa9d5d29a, s.Struct)
	return str
}

func (s RequestLog) Timestamp() uint64 {
	return s.Struct.Uint64(0)
}

func (s RequestLog) SetTimestamp(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s RequestLog) Uuid() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s RequestLog) HasUuid() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RequestLog) UuidBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s RequestLog) SetUuid(v string) error {
	return s.Struct.SetText(0, v)
}

func (s RequestLog) Record() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s RequestLog) HasRecord() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s RequestLog) RecordBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s RequestLog) SetRecord(v string) error {
	return s.Struct.SetText(1, v)
}

func (s RequestLog) Type() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s RequestLog) HasType() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s RequestLog) TypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s RequestLog) SetType(v string) error {
	return s.Struct.SetText(2, v)
}

func (s RequestLog) Ip() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s RequestLog) HasIp() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s RequestLog) IpBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s RequestLog) SetIp(v string) error {
	return s.Struct.SetText(3, v)
}

func (s RequestLog) Country() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s RequestLog) HasCountry() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s RequestLog) CountryBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s RequestLog) SetCountry(v string) error {
	return s.Struct.SetText(4, v)
}

func (s RequestLog) Asn() uint32 {
	return s.Struct.Uint32(8)
}

func (s RequestLog) SetAsn(v uint32) {
	s.Struct.SetUint32(8, v)
}

func (s RequestLog) Responsecode() uint16 {
	return s.Struct.Uint16(12)
}

func (s RequestLog) SetResponsecode(v uint16) {
	s.Struct.SetUint16(12, v)
}

func (s RequestLog) Processtime() uint16 {
	return s.Struct.Uint16(14)
}

func (s RequestLog) SetProcesstime(v uint16) {
	s.Struct.SetUint16(14, v)
}

func (s RequestLog) Cache() (string, error) {
	p, err := s.Struct.Ptr(5)
	return p.Text(), err
}

func (s RequestLog) HasCache() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s RequestLog) CacheBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return p.TextBytes(), err
}

func (s RequestLog) SetCache(v string) error {
	return s.Struct.SetText(5, v)
}

// RequestLog_List is a list of RequestLog.
type RequestLog_List struct{ capnp.List }

// NewRequestLog creates a new list of RequestLog.
func NewRequestLog_List(s *capnp.Segment, sz int32) (RequestLog_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 6}, sz)
	return RequestLog_List{l}, err
}

func (s RequestLog_List) At(i int) RequestLog { return RequestLog{s.List.Struct(i)} }

func (s RequestLog_List) Set(i int, v RequestLog) error { return s.List.SetStruct(i, v.Struct) }

func (s RequestLog_List) String() string {
	str, _ := text.MarshalList(0xaa7385cfa9d5d29a, s.List)
	return str
}

// RequestLog_Promise is a wrapper for a RequestLog promised by a client call.
type RequestLog_Promise struct{ *capnp.Pipeline }

func (p RequestLog_Promise) Struct() (RequestLog, error) {
	s, err := p.Pipeline.Struct()
	return RequestLog{s}, err
}

const schema_fc934851acf345ab = "x\xda<\xcd\xcd\x8a\xd4@\x14\xc5\xf1s*\x1f\x95@" +
	"cOS%\x8c2\xe2(\x0a\xad\xa8\xd82 \x0e\x82" +
	"\x83 \xb8paO=A\xcc\x14\x1a\xa1\x93\x98J\x16" +
	"\xbdr\xe5\x13\xb8\xf3\x0d\xfcx\x07Wn\x04\x11\x057" +
	"\xbe\x86[!r\x1d\xbaw\xf7\xff\xe3\xc2\xd9\xf9}\xa4" +
	"\x16\xc9g\x02K\x9b\xa4\xe3\xbb\x9f\xbf\xde\x7f\x7f\x13>" +
	"`y\x86j\xfc\xf8\xe8\xcf\xa7\xe5\xe3\xb7\x7f\x91\xa4\x1a" +
	"\x98}\xf9:\xfb\xa1\x81\xc5\xb7\xbb\x0a7\xc7\xce\xbf\x1a" +
	"|\xe8o\xa9\xb2h\xeb\xf6\xf0\xf84\x9f4\xcf\x81\xa7" +
	"\xe4r\x1e\xc5@L\xc0\xe4<\x06\\\xc6\x88\xceR\x91" +
	"\xb4\x14\x9e\xf1:\xe0&\xc2\xbbT\x9c)Z*\xc0\x9c" +
	"\xe5!\xe0v\xc4\xf7\xc4#e\x19\x01\xe6\xdc\xff\x7f+" +
	"\xbe/\x1eG\x961`.\xf0<\xe0v\xc5\xaf\x88'" +
	"\xb1e\x02\x98K|\x08\xb8=\xf1\xb9x\xaa,S\xc0" +
	"\\\xe5e\xc0\xed\x8b\xdf\x10\xd7\xa9\xa5\x06\xcc5\xbe\x04" +
	"\xdc\\\xfc@<\xd3\x96\x19`\x16|\x06\xb8\xdb\xe2\xf7" +
	"\xc5\xf3\xc42\x07\xcc=\xde\x01\xdc\x81\xf8\x11\x15\xc7\xbe" +
	"Z\xf9\xd0\x17+\xb0e\x0e\xc5\x1c\x9c\x0eCu\xc2\x09" +
	"\x14'\xe0\x83\xce\x97M\xb7\xcdi\xbfn\xfd&\xa2\xaa" +
	"\xdd\x9c\xaf\xcbf\xa8\xfbn\xbdi]\x84\x9a\x19\x143" +
	"p\xec|h\x9b:xL\xcb\xe6\xc4SCQ\x83c" +
	"\xdb5\xa5\x0f\xa1\x87\xaeV[\xbdX\x16\xe5\x8b\xed\xc2" +
	"\xbf\x00\x00\x00\xff\xffM7M\xc8"

func init() {
	schemas.Register(schema_fc934851acf345ab,
		0xaa7385cfa9d5d29a)
}
